<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">
	
	<!-- 지속적으로 불러올 클래스를 빈에 설정 -->
	<bean name="profilingAspect" class = "kr.or.ddit.aop.ProfilingAspect"/>
	
	<aop:config >
		<!-- 포인트컷 설정 : 공통의 관심사항을 적용할 부분을 설정(ex: 특정 패키지에 존재하는 모든 클래스의 메소드) execution([접근수정자패턴]<반환형식패턴><선언형식패턴><메소드이름패턴>)  -->
		<!-- kr.or.ddit.user..service
			kr.or.ddit.user.detail.service
			kr.or.ddit.user.service
		 -->
		 <!-- kr.or.ddit 패키지 하위중에  service 패키지 안의 모든 클래스의 메소드가 실행될 때  -->
		<aop:pointcut id="pointcut" expression="execution(* kr.or.ddit..service.*.*(..))" />
		<aop:aspect ref="profilingAspect">
			<!-- 실행할 메소드 선언 -->
			<aop:before pointcut-ref="pointcut" method="before"/>
			<aop:after pointcut-ref="pointcut" method="after"/>
			<aop:around pointcut-ref="pointcut" method="around"/>
		</aop:aspect>	
	</aop:config>
	
	<!-- userService 설정-->
	<context:component-scan base-package="kr.or.ddit" />
	<context:annotation-config/>
	
</beans>
